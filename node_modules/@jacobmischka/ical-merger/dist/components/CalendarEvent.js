function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

import _JSXStyle from "styled-jsx/style";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/** @format */
import React, { Component } from "react";
import PropTypes from "prop-types";
import Color from "color";
import striptags from "striptags";
import linkifyHtml from 'linkifyjs/html';
import MapPin from "react-feather/dist/icons/map-pin.js";
import User from "react-feather/dist/icons/user.js";
import Users from "react-feather/dist/icons/users.js";
import { OPACITIES } from "../constants.js";

var CalendarEvent = /*#__PURE__*/function (_Component) {
  _inherits(CalendarEvent, _Component);

  var _super = _createSuper(CalendarEvent);

  function CalendarEvent(props) {
    var _this;

    _classCallCheck(this, CalendarEvent);

    _this = _super.call(this, props);
    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));
    _this.getEventTime = _this.getEventTime.bind(_assertThisInitialized(_this));
    _this.getClassName = _this.getClassName.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(CalendarEvent, [{
    key: "markupDescription",
    value: function markupDescription(description) {
      description = linkifyHtml(striptags(description, ["a", "i", "b", "br", "p"]));
      return {
        __html: description
      };
    }
  }, {
    key: "renderEventLocation",
    value: function renderEventLocation(location) {
      if (!location) return;
      if (typeof location === "string") return location;
      if (location.name) return location.name;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          event = _this$props.event,
          showLocation = _this$props.showLocation,
          showCalendarName = _this$props.showCalendarName,
          showDescription = _this$props.showDescription,
          showPresenters = _this$props.showPresenters;
      var eventTime = this.getEventTime();
      var className = this.getClassName();
      var color = Color(event.color);
      var style = {
        border: "1px solid ".concat(color.rgb().string()),
        backgroundColor: color.alpha(0.3).rgb().string()
      };
      var ContainerElement = this.props.containerElement || "div";
      return /*#__PURE__*/React.createElement(ContainerElement, {
        style: style,
        title: event.calendar.calname,
        onClick: this.handleClick,
        ref: function ref(container) {
          return _this2.container = container;
        },
        className: _JSXStyle.dynamic([["3785481645", [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]]]) + " " + (className || "")
      }, /*#__PURE__*/React.createElement("span", {
        className: _JSXStyle.dynamic([["3785481645", [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]]]) + " " + "event-time"
      }, eventTime), /*#__PURE__*/React.createElement("span", {
        className: _JSXStyle.dynamic([["3785481645", [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]]]) + " " + "event-title"
      }, showCalendarName && /*#__PURE__*/React.createElement("span", {
        className: _JSXStyle.dynamic([["3785481645", [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]]]) + " " + "event-calendar"
      }, event.calendar.calname), event.title), showLocation && event.location && /*#__PURE__*/React.createElement("span", {
        className: _JSXStyle.dynamic([["3785481645", [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]]]) + " " + "event-location"
      }, /*#__PURE__*/React.createElement(MapPin, null), this.renderEventLocation(event.location)), showPresenters && event.presenters && event.presenters.length > 0 && /*#__PURE__*/React.createElement("span", {
        className: _JSXStyle.dynamic([["3785481645", [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]]]) + " " + "event-presenters"
      }, event.presenters.length === 1 ? /*#__PURE__*/React.createElement(User, null) : /*#__PURE__*/React.createElement(Users, null), event.presenters.map(function (presenter) {
        return presenter.name;
      }).join(", ")), showDescription && event.description && /*#__PURE__*/React.createElement("div", {
        dangerouslySetInnerHTML: this.markupDescription(event.description),
        className: _JSXStyle.dynamic([["3785481645", [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]]]) + " " + "event-desc"
      }), /*#__PURE__*/React.createElement(_JSXStyle, {
        id: "3785481645",
        dynamic: [OPACITIES.TEXT.PRIMARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY, OPACITIES.TEXT.SECONDARY]
      }, [".event{font-family:\"Noto Sans\",sans-serif;color:rgba(0,0,0,".concat(OPACITIES.TEXT.PRIMARY, ");padding:0.5em;margin:1px;cursor:pointer;font-size:0.75em;}"), ".event-calendar.__jsx-style-dynamic-selector{margin:0 0.5em 0 0;color:rgba(0,0,0,".concat(OPACITIES.TEXT.SECONDARY, ");}"), ".event-location.__jsx-style-dynamic-selector{display:block;margin:0.5em 0 0;color:rgba(0,0,0,".concat(OPACITIES.TEXT.SECONDARY, ");}"), ".event-presenters.__jsx-style-dynamic-selector{display:block;margin:0.5em 0 0;color:rgba(0,0,0,".concat(OPACITIES.TEXT.SECONDARY, ");}"), ".event svg{width:1em;height:1em;overflow:visible;margin-right:0.25em;}", ".event-time.__jsx-style-dynamic-selector{margin:0 0.5em 0 0;text-transform:uppercase;}", ".event-title.__jsx-style-dynamic-selector{word-wrap:break-word;}", ".event-desc.__jsx-style-dynamic-selector{font-size:0.9em;word-wrap:break-word;white-space:pre-line;color:rgba(0,0,0,".concat(OPACITIES.TEXT.SECONDARY, ");}"), ".event-desc.__jsx-style-dynamic-selector,.event-desc.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{margin-top:1em;margin-bottom:1em;}", ".event.all-day .event-time.__jsx-style-dynamic-selector{display:inline-block;text-align:center;background:#bfbfbf;border-radius:2px;padding:0.15em 0.5em;white-space:nowrap;}", "@media print{.event{font-size:0.6em;}}"]));
    }
  }, {
    key: "getEventTime",
    value: function getEventTime() {
      var eventTime;

      try {
        var event = this.props.event;

        if (event.allDay) {
          eventTime = /*#__PURE__*/React.createElement("span", null, "All day");
        } else {
          var start = event.start,
              end = event.end;
          var startTime = start.format("h");
          if (start.get("minute") !== 0) startTime += ":".concat(start.format("mm"));
          if (start.format("A") !== end.format("A")) startTime += " ".concat(start.format("A"));
          var endTime = end.get("minute") === 0 ? end.format("h A") : end.format("LT");
          eventTime = /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("time", {
            className: "event-time-start",
            dateTime: start.toISOString()
          }, startTime), " \u2013 ", /*#__PURE__*/React.createElement("time", {
            className: "event-time-end",
            dateTime: end.toISOString()
          }, endTime));
        }
      } catch (err) {
        console.error(err);
      }

      return eventTime;
    }
  }, {
    key: "getClassName",
    value: function getClassName() {
      var className = "event";
      if (this.props.event.allDay) className += " all-day";
      return className;
    }
  }, {
    key: "handleClick",
    value: function handleClick(clickEvent) {
      clickEvent.preventDefault();
      var _this$props2 = this.props,
          event = _this$props2.event,
          setActiveEvent = _this$props2.setActiveEvent,
          setActiveEventId = _this$props2.setActiveEventId;
      setActiveEventId(event.id, this.container);
      setActiveEvent(event);
    }
  }]);

  return CalendarEvent;
}(Component);

export { CalendarEvent as default };
CalendarEvent.propTypes = {
  setActiveEvent: PropTypes.func.isRequired,
  setActiveEventId: PropTypes.func.isRequired,
  event: PropTypes.object.isRequired,
  view: PropTypes.object,
  containerElement: PropTypes.string,
  showLocation: PropTypes.bool,
  showCalendarName: PropTypes.bool,
  showDescription: PropTypes.bool,
  showPresenters: PropTypes.bool
};
CalendarEvent.defaultProps = {
  showLocation: false,
  showCalendarName: false,
  showDescription: false,
  showPresenters: false
};